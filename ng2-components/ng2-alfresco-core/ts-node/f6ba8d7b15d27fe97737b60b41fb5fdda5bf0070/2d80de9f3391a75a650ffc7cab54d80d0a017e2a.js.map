{"version":3,"file":"/Users/valbano/Documents/alfresco-ng2-components/ng2-components/ng2-alfresco-core/gulpfile.ts","sources":["/Users/valbano/Documents/alfresco-ng2-components/ng2-components/ng2-alfresco-core/gulpfile.ts"],"names":[],"mappings":"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","sourcesContent":["import * as gulp from 'gulp';\nimport * as util from 'gulp-util';\nimport * as runSequence from 'run-sequence';\nimport * as gulpLoadPlugins from 'gulp-load-plugins';\nimport * as merge from 'merge-stream';\nimport * as rimraf from 'rimraf';\nimport { join } from 'path';\nimport * as Builder from 'systemjs-builder';\nvar autoprefixer = require('autoprefixer');\nimport * as cssnano from 'cssnano';\nimport * as filter from 'gulp-filter';\n\nvar APP_SRC = `.`;\nvar CSS_PROD_BUNDLE = 'main.css';\nvar JS_PROD_SHIMS_BUNDLE = 'shims.js';\nvar NG_FACTORY_FILE = 'main-prod';\n\nconst BUILD_TYPES = {\n    DEVELOPMENT: 'dev',\n    PRODUCTION: 'prod'\n};\n\nfunction normalizeDependencies(deps) {\n    deps\n        .filter((d) => !/\\*/.test(d.src)) // Skip globs\n        .forEach((d) => d.src = require.resolve(d.src));\n    return deps;\n}\n\nfunction filterDependency(type: string, d): boolean {\n    const t = d.buildType || d.env;\n    d.buildType = t;\n    if (!t) {\n        d.buildType = Object.keys(BUILD_TYPES).map(k => BUILD_TYPES[k]);\n    }\n    if (!(d.buildType instanceof Array)) {\n        (<any>d).env = [d.buildType];\n    }\n    return d.buildType.indexOf(type) >= 0;\n}\n\nfunction getInjectableDependency() {\n    var APP_ASSETS = [\n        {src: `src/css/main.css`, inject: true, vendor: false},\n    ];\n\n    var NPM_DEPENDENCIES = [\n        {src: 'zone.js/dist/zone.js', inject: 'libs'},\n        {src: 'core-js/client/shim.min.js', inject: 'shims'},\n        {src: 'intl/dist/Intl.min.js', inject: 'shims'},\n        {src: 'systemjs/dist/system.src.js', inject: 'shims', buildType:'dev'}\n    ];\n\n    return normalizeDependencies(NPM_DEPENDENCIES.filter(filterDependency.bind(null, 'dev')))\n        .concat(APP_ASSETS.filter(filterDependency.bind(null, 'dev')));\n}\n\nconst plugins = <any>gulpLoadPlugins();\n\nlet tsProjects: any = {};\n\nfunction makeTsProject(options: Object = {}) {\n    let optionsHash = JSON.stringify(options);\n    if (!tsProjects[optionsHash]) {\n        let config = Object.assign({\n            typescript: require('typescript')\n        }, options);\n        tsProjects[optionsHash] =\n            plugins.typescript.createProject('tsconfig.json', config);\n    }\n    return tsProjects[optionsHash];\n}\n\ngulp.task('build.html_css', () => {\n    const gulpConcatCssConfig = {\n        targetFile: CSS_PROD_BUNDLE,\n        options: {\n            rebaseUrls: false\n        }\n    };\n\n    const processors = [\n        autoprefixer({\n            browsers: [\n                'ie >= 10',\n                'ie_mob >= 10',\n                'ff >= 30',\n                'chrome >= 34',\n                'safari >= 7',\n                'opera >= 23',\n                'ios >= 7',\n                'android >= 4.4',\n                'bb >= 10'\n            ]\n        })\n    ];\n\n    const reportPostCssError = (e: any) => util.log(util.colors.red(e.message));\n\n    processors.push(\n        cssnano({\n            discardComments: {removeAll: true},\n            discardUnused: false, // unsafe, see http://goo.gl/RtrzwF\n            zindex: false, // unsafe, see http://goo.gl/vZ4gbQ\n            reduceIdents: false // unsafe, see http://goo.gl/tNOPv0\n        })\n    );\n\n    /**\n     * Processes the CSS files within `src/client` excluding those in `src/client/assets` using `postcss` with the\n     * configured processors\n     * Execute the appropriate component-stylesheet processing method based on user stylesheet preference.\n     */\n    function processComponentStylesheets() {\n        return gulp.src(join('src/**', '*.css'))\n            .pipe(plugins.cached('process-component-css'))\n            .pipe(plugins.postcss(processors))\n            .on('error', reportPostCssError);\n    }\n\n\n    /**\n     * Get a stream of external css files for subsequent processing.\n     */\n    function getExternalCssStream() {\n        return gulp.src(getExternalCss())\n            .pipe(plugins.cached('process-external-css'));\n    }\n\n    /**\n     * Get an array of filenames referring to all external css stylesheets.\n     */\n    function getExternalCss() {\n        return getInjectableDependency().filter(dep => /\\.css$/.test(dep.src)).map(dep => dep.src);\n    }\n\n    /**\n     * Processes the external CSS files using `postcss` with the configured processors.\n     */\n    function processExternalCss() {\n        return getExternalCssStream()\n            .pipe(plugins.postcss(processors))\n            .pipe(plugins.concatCss(gulpConcatCssConfig.targetFile, gulpConcatCssConfig.options))\n            .on('error', reportPostCssError);\n    }\n\n    return merge(processComponentStylesheets(), processExternalCss());\n\n});\n\ngulp.task('build.bundles.app', (done) => {\n    var BUNDLER_OPTIONS = {\n        format: 'umd',\n        minify: false,\n        mangle: false,\n        sourceMaps: true\n    };\n    var CONFIG_TYPESCRIPT = {\n        baseURL: '.',\n        transpiler: 'typescript',\n        typescriptOptions: {\n            module: 'cjs'\n        },\n        map: {\n            typescript: 'node_modules/typescript/lib/typescript.js',\n            '@angular': 'node_modules/@angular',\n            rxjs: 'node_modules/rxjs',\n            'ng2-translate': 'node_modules/ng2-translate',\n            'alfresco-js-api': 'node_modules/alfresco-js-api/dist/alfresco-js-api',\n            'ng2-alfresco-core': 'node_modules/ng2-alfresco-core/',\n            'ng2-activiti-diagrams': 'node_modules/ng2-activiti-diagrams/',\n            'ng2-activiti-analytics': 'node_modules/ng2-activiti-analytics/',\n            'ng2-alfresco-datatable': 'node_modules/ng2-alfresco-datatable/',\n            'ng2-alfresco-documentlist': 'node_modules/ng2-alfresco-documentlist/',\n            'ng2-activiti-form': 'node_modules/ng2-activiti-form/',\n            'ng2-alfresco-login': 'node_modules/ng2-alfresco-login/',\n            'ng2-activiti-processlist': 'node_modules/ng2-activiti-processlist/',\n            'ng2-alfresco-search': 'node_modules/ng2-alfresco-search/',\n            'ng2-activiti-tasklist': 'node_modules/ng2-activiti-tasklist/',\n            'ng2-alfresco-tag': 'node_modules/ng2-alfresco-tag/',\n            'ng2-alfresco-upload': 'node_modules/ng2-alfresco-upload/',\n            'ng2-alfresco-userinfo': 'node_modules/ng2-alfresco-userinfo/',\n            'ng2-alfresco-viewer': 'node_modules/ng2-alfresco-viewer/',\n            'ng2-alfresco-webscript': 'node_modules/ng2-alfresco-webscript/'\n        },\n        paths: {\n            '*': '*.js'\n        },\n        meta: {\n            'node_modules/@angular/*': {build: false},\n            'node_modules/rxjs/*': {build: false},\n            'node_modules/alfresco-js-api/*': {build: false},\n            'node_modules/ng2-translate/*': {build: false},\n            'node_modules/ng2-alfresco-core/*': {build: false},\n            'node_modules/ng2-activiti-diagrams/*': {build: false},\n            'node_modules/ng2-activiti-analytics/*': {build: false},\n            'node_modules/ng2-alfresco-datatable/*': {build: false},\n            'node_modules/ng2-alfresco-documentlist/*': {build: false},\n            'node_modules/ng2-activiti-form/*': {build: false},\n            'node_modules/ng2-alfresco-login/*': {build: false},\n            'node_modules/ng2-activiti-processlist/*': {build: false},\n            'node_modules/ng2-alfresco-search/*': {build: false},\n            'node_modules/ng2-activiti-tasklist/*': {build: false},\n            'node_modules/ng2-alfresco-tag/*': {build: false},\n            'node_modules/ng2-alfresco-upload/*': {build: false},\n            'node_modules/ng2-alfresco-userinfo/*': {build: false},\n            'node_modules/ng2-alfresco-viewer/*': {build: false},\n            'node_modules/ng2-alfresco-webscript/*': {build: false}\n        }\n    };\n\n    var pkg = require('./package.json');\n    var namePkg = pkg.name;\n\n    var builder = new Builder(CONFIG_TYPESCRIPT);\n    builder\n        .buildStatic(APP_SRC + \"/index\", 'bundles/' + namePkg + '.js', BUNDLER_OPTIONS)\n        .then(function () {\n            return done();\n        })\n        .catch(function (err) {\n            return done(err);\n        });\n});\n\ngulp.task('build.assets.prod', () => {\n    return gulp.src([\n        join('src/**', '*.ts'),\n        'index.ts',\n        join('src/**', '*.css'),\n        join('src/**', '*.html'),\n        '!'+join('*/**', '*.d.ts'),\n        '!'+join('*/**', '*.spec.ts'),\n        '!gulpfile.ts'])\n\n});\n\ngulp.task('build.bundles', () => {\n    merge(bundleShims());\n\n    /**\n     * Returns the shim files to be injected.\n     */\n    function getShims() {\n        let libs = getInjectableDependency()\n            .filter(d => /\\.js$/.test(d.src));\n\n        return libs.filter(l => l.inject === 'shims')\n            .concat(libs.filter(l => l.inject === 'libs'))\n            .concat(libs.filter(l => l.inject === true))\n            .map(l => l.src);\n    }\n\n    /**\n     * Bundles the shim files.\n     */\n    function bundleShims() {\n        return gulp.src(getShims())\n            .pipe(plugins.concat(JS_PROD_SHIMS_BUNDLE))\n            // Strip the first (global) 'use strict' added by reflect-metadata, but don't strip any others to avoid unintended scope leaks.\n            .pipe(plugins.replace(/('|\")use strict\\1;var Reflect;/, 'var Reflect;'))\n            .pipe(gulp.dest('bundles'));\n    }\n\n});\n\ngulp.task('build.js.prod', () => {\n    const INLINE_OPTIONS = {\n        base: APP_SRC,\n        target: 'es5',\n        useRelativePaths: true,\n        removeLineBreaks: true\n    };\n\n    let tsProject = makeTsProject();\n    let src = [\n        join('src/**/*.ts'),\n        join('!src/**/*.d.ts'),\n        join('!src/**/*.spec.ts'),\n        `!src/**/${NG_FACTORY_FILE}.ts`\n    ];\n\n    let result = gulp.src(src)\n        .pipe(plugins.plumber())\n        .pipe(plugins.inlineNg2Template(INLINE_OPTIONS))\n        .pipe(tsProject())\n        .once('error', function (e: any) {\n            this.once('finish', () => process.exit(1));\n        });\n\n    return result.js\n        .pipe(plugins.template())\n        .pipe(gulp.dest('src'))\n        .on('error', (e: any) => {\n            console.log(e);\n        });\n});\n\ngulp.task('build.prod', (done: any) =>\n    runSequence(\n        'build.assets.prod',\n        'build.html_css',\n        'build.js.prod',\n        'build.bundles',\n        'build.bundles.app',\n        done));\n"]}