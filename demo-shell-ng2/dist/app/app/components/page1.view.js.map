{"version":3,"sources":["components/page1.view.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;YA6CA;gBAkBI;oBAhBA,YAAO,GAAU;wBACb,GAAG,EAAE,wDAAwD;wBAC7D,eAAe,EAAE,IAAI;wBACrB,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC;wBAC9B,eAAe,EAAE,OAAO;wBACxB,SAAS,EAAE,UAAU;wBACrB,UAAU,EAAE;4BACR,MAAM,EAAE,OAAO;4BACf,WAAW,EAAE,iBAAiB;yBACjC;qBACJ,CAAC;oBAGF,iBAAY,GAAU,CAAC,CAAC;oBACxB,aAAQ,GAAS,EAAE,CAAC;oBAGhB,IAAI,CAAC,IAAI,GAAG,IAAI,aAAM,CAAC,EAAC,oBAAoB,EAAE,KAAK,EAAC,CAAC,CAAC;gBAC1D,CAAC;gBAED,gCAAY,GAAZ,UAAa,IAAI;oBACb,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;wBACxB,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;wBACjC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;oBAC3B,CAAC;gBACL,CAAC;gBAED,oCAAgB,GAAhB,UAAiB,IAAI;oBAArB,iBAiBC;oBAhBG,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,EAAhB,CAAgB,CAAC,CAAC;oBAC3D,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;wBACf,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBAC7B,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;4BACV,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;wBAChC,CAAC,CAAC,CAAC;oBACP,CAAC;oBAED,IAAI,KAAK,GAAG,CAAC,EAAE,QAAQ,GAAG,CAAC,CAAC;oBAC5B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAA,IAAI;wBACtB,KAAK,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;wBAC7B,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;oBACrC,CAAC,CAAC,CAAC;oBAEH,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC;gBAC7D,CAAC;gBAxFL;oBAAC,gBAAS,CAAC;wBACP,QAAQ,EAAE,YAAY;wBACtB,MAAM,EAAE;4BACJ,ySAUC;yBACJ;wBACD,QAAQ,EAAE,6/BAwBT;wBACD,UAAU,EAAE,CAAC,gCAAiB,CAAC;qBAClC,CAAC;;6BAAA;gBAgDF,gBAAC;YAAD,CA/CA,AA+CC,IAAA;YA/CD,iCA+CC,CAAA","file":"page1.view.js","sourcesContent":["import {Component, NgZone} from 'angular2/core';\nimport {UPLOAD_DIRECTIVES} from 'ng2-uploader/ng2-uploader';\n\n@Component({\n    selector: 'page1-view',\n    styles: [\n        `\n        :host .dropzone {\n            width: 100%;\n            height: 100px;\n            background-color: #f5f5f5;\n            margin-top: 2px;\n            margin-bottom: 2px;\n            box-shadow: inset 0 1px 2px rgba(0,0,0,.1);\n            text-align: center;\n        }\n        `\n    ],\n    template: `\n        <div class=\"container\">\n            <div class=\"row\">\n                <h2>Upload File</h2>\n                <input type=\"file\" \n                       [ng-file-select]=\"options\"\n                       (onUpload)=\"handleUpload($event)\">\n                <div>\n                    Response: {{ uploadFile | json }}\n                </div>\n            </div>\n            <div class=\"row\">\n                <h2>Drag and Drop file demo</h2>\n                <div class=\"col-md-4 col-md-offset-3\">\n                    <div [ng-file-drop]=\"options\" (onUpload)=\"handleDropUpload($event)\" class=\"dropzone\">\n                        Drop file here...\n                    </div>\n                    <div class=\"progress\">\n                        <div class=\"progress-bar\" [style.width]=\"dropProgress + '%'\"></div>\n                        <span class=\"percent\">{{ dropProgress }}%</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    directives: [UPLOAD_DIRECTIVES]\n})\nexport class Page1View {\n    uploadFile:any;\n    options:Object = {\n        url: 'http://192.168.99.100:8080/alfresco/service/api/upload',\n        withCredentials: true,\n        authToken: btoa('admin:admin'),\n        authTokenPrefix: 'Basic',\n        fieldName: 'filedata',\n        formFields: {\n            siteid: 'swsdp',\n            containerid: 'documentLibrary'\n        }\n    };\n\n    zone:NgZone;\n    dropProgress:number = 0;\n    dropResp:any[] = [];\n\n    constructor() {\n        this.zone = new NgZone({enableLongStackTrace: false});\n    }\n\n    handleUpload(data):void {\n        if (data && data.response) {\n            data = JSON.parse(data.response);\n            this.uploadFile = data;\n        }\n    }\n\n    handleDropUpload(data):void {\n        let index = this.dropResp.findIndex(x => x.id === data.id);\n        if (index === -1) {\n            this.dropResp.push(data);\n        } else {\n            this.zone.run(() => {\n                this.dropResp[index] = data;\n            });\n        }\n\n        let total = 0, uploaded = 0;\n        this.dropResp.forEach(resp => {\n            total += resp.progress.total;\n            uploaded += resp.progress.loaded;\n        });\n\n        this.dropProgress = Math.floor(uploaded / (total / 100));\n    }\n}\n"]}